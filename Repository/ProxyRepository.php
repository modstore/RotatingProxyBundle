<?php

namespace Modstore\RotatingProxyBundle\Repository;

use Modstore\RotatingProxyBundle\Entity\Proxy;
use Doctrine\ORM\Query\Expr\Join;

/**
 * ProxyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProxyRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get the enabled proxy that hasn't been used for the longest time, or proxy
     * of any other status that hasn't been used for 6 hours or more.
     *
     * @return Proxy|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneEnabledByGroupNameOrderByTs($name)
    {
        return $this->createQueryBuilder('p')
            ->leftJoin('p.groups', 'g', Join::WITH, 'p = g.proxy AND g.name = :name')
            ->setParameter('name', $name)
            ->where('p.status != :status_disabled')
            ->setParameter('status_disabled', Proxy::STATUS_DISABLED)
            ->orWhere('p.ts < :ts')
            ->setParameter('ts', time() - (6 * 3600))
            ->addOrderBy('g.ts', 'ASC')
            ->addOrderBy('p.ts', 'ASC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
